{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\Desktop\\\\my-app\\\\src\\\\Keypad.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Keypad({\n  quantity,\n  setQuantity\n}) {\n  const handleKeyPress = number => {\n    if (number === 'Clear') {\n      setQuantity(0);\n    } else if (number === 'Enter') {\n      // Enter is handled when adding items, so do nothing here\n    } else {\n      setQuantity(parseInt(`${quantity}${number}`, 10));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keypad\",\n    children: ['1', '2', '3', '4', '5', '6', '7', '8', '9', 'Clear', '0', 'Enter'].map(num => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleKeyPress(num),\n      children: num\n    }, num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_c = Keypad;\nexport default Keypad;\nvar _c;\n$RefreshReg$(_c, \"Keypad\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Keypad","quantity","setQuantity","handleKeyPress","number","parseInt","className","children","map","num","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/Desktop/my-app/src/Keypad.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction Keypad({ quantity, setQuantity }) {\r\n    const handleKeyPress = (number) => {\r\n        if (number === 'Clear') {\r\n            setQuantity(0);\r\n        } else if (number === 'Enter') {\r\n            // Enter is handled when adding items, so do nothing here\r\n        } else {\r\n            setQuantity(parseInt(`${quantity}${number}`, 10));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"keypad\">\r\n            {['1', '2', '3', '4', '5', '6', '7', '8', '9', 'Clear', '0', 'Enter'].map((num) => (\r\n                <button key={num} onClick={() => handleKeyPress(num)}>\r\n                    {num}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Keypad;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EACvC,MAAMC,cAAc,GAAIC,MAAM,IAAK;IAC/B,IAAIA,MAAM,KAAK,OAAO,EAAE;MACpBF,WAAW,CAAC,CAAC,CAAC;IAClB,CAAC,MAAM,IAAIE,MAAM,KAAK,OAAO,EAAE;MAC3B;IAAA,CACH,MAAM;MACHF,WAAW,CAACG,QAAQ,CAAC,GAAGJ,QAAQ,GAAGG,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;IACrD;EACJ,CAAC;EAED,oBACIL,OAAA;IAAKO,SAAS,EAAC,QAAQ;IAAAC,QAAA,EAClB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC,CAACC,GAAG,CAAEC,GAAG,iBAC1EV,OAAA;MAAkBW,OAAO,EAAEA,CAAA,KAAMP,cAAc,CAACM,GAAG,CAAE;MAAAF,QAAA,EAChDE;IAAG,GADKA,GAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAER,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACC,EAAA,GApBQf,MAAM;AAsBf,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}